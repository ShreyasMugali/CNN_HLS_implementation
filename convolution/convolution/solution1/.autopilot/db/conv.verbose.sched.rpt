

================================================================
== Vivado HLS Report for 'conv'
================================================================
* Date:           Fri Jun 23 14:06:00 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        convolution
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx485tffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.11|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  507|  507|  508|  508|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |  506|  506|        46|          -|          -|    11|    no    |
        | + Loop 1.1  |   44|   44|         4|          -|          -|    11|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 6
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (!exitcond)
	2  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	3  / true
* FSM state operations: 

 <State 1>: 0.85ns
ST_1: sum (4)  [1/1] 0.00ns
:0  %sum = alloca i32

ST_1: StgValue_8 (5)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([121 x i32]* %a) nounwind, !map !13

ST_1: StgValue_9 (6)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([121 x i32]* %b) nounwind, !map !19

ST_1: StgValue_10 (7)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32* %c) nounwind, !map !23

ST_1: StgValue_11 (8)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @conv_str) nounwind

ST_1: StgValue_12 (9)  [1/1] 0.85ns
:5  store i32 0, i32* %sum

ST_1: StgValue_13 (10)  [1/1] 0.85ns  loc: conv.cpp:7
:6  br label %.loopexit


 <State 2>: 1.70ns
ST_2: i (12)  [1/1] 0.00ns
.loopexit:0  %i = phi i4 [ 0, %0 ], [ %i_1, %.loopexit.loopexit ]

ST_2: phi_mul (13)  [1/1] 0.00ns
.loopexit:1  %phi_mul = phi i7 [ 0, %0 ], [ %next_mul, %.loopexit.loopexit ]

ST_2: next_mul (14)  [1/1] 1.70ns
.loopexit:2  %next_mul = add i7 %phi_mul, 11

ST_2: exitcond1 (15)  [1/1] 1.57ns  loc: conv.cpp:7
.loopexit:3  %exitcond1 = icmp eq i4 %i, -5

ST_2: empty (16)  [1/1] 0.00ns
.loopexit:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 11, i64 11, i64 11) nounwind

ST_2: i_1 (17)  [1/1] 1.44ns  loc: conv.cpp:7
.loopexit:5  %i_1 = add i4 %i, 1

ST_2: StgValue_20 (18)  [1/1] 0.00ns  loc: conv.cpp:7
.loopexit:6  br i1 %exitcond1, label %2, label %.preheader.preheader

ST_2: StgValue_21 (20)  [1/1] 0.85ns  loc: conv.cpp:13
.preheader.preheader:0  br label %.preheader

ST_2: sum_load (43)  [1/1] 0.00ns  loc: conv.cpp:23
:0  %sum_load = load i32* %sum

ST_2: StgValue_23 (44)  [1/1] 0.00ns  loc: conv.cpp:23
:1  call void @_ssdm_op_Write.ap_auto.i32P(i32* %c, i32 %sum_load) nounwind

ST_2: StgValue_24 (45)  [1/1] 0.00ns  loc: conv.cpp:24
:2  ret void


 <State 3>: 3.96ns
ST_3: j (22)  [1/1] 0.00ns
.preheader:0  %j = phi i4 [ %j_1, %1 ], [ 0, %.preheader.preheader ]

ST_3: j_cast1_cast (23)  [1/1] 0.00ns  loc: conv.cpp:13
.preheader:1  %j_cast1_cast = zext i4 %j to i7

ST_3: tmp_2 (24)  [1/1] 1.70ns  loc: conv.cpp:13
.preheader:2  %tmp_2 = add i7 %phi_mul, %j_cast1_cast

ST_3: tmp_2_cast (25)  [1/1] 0.00ns  loc: conv.cpp:13
.preheader:3  %tmp_2_cast = zext i7 %tmp_2 to i32

ST_3: a_addr (26)  [1/1] 0.00ns  loc: conv.cpp:13
.preheader:4  %a_addr = getelementptr [121 x i32]* %a, i32 0, i32 %tmp_2_cast

ST_3: b_addr (27)  [1/1] 0.00ns  loc: conv.cpp:13
.preheader:5  %b_addr = getelementptr [121 x i32]* %b, i32 0, i32 %tmp_2_cast

ST_3: exitcond (28)  [1/1] 1.57ns  loc: conv.cpp:10
.preheader:6  %exitcond = icmp eq i4 %j, -5

ST_3: empty_3 (29)  [1/1] 0.00ns
.preheader:7  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 11, i64 11, i64 11) nounwind

ST_3: j_1 (30)  [1/1] 1.44ns  loc: conv.cpp:10
.preheader:8  %j_1 = add i4 %j, 1

ST_3: StgValue_34 (31)  [1/1] 0.00ns  loc: conv.cpp:10
.preheader:9  br i1 %exitcond, label %.loopexit.loopexit, label %1

ST_3: a_load (34)  [2/2] 2.27ns  loc: conv.cpp:13
:1  %a_load = load i32* %a_addr, align 4

ST_3: b_load (35)  [2/2] 2.27ns  loc: conv.cpp:13
:2  %b_load = load i32* %b_addr, align 4

ST_3: StgValue_37 (41)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 2.27ns
ST_4: a_load (34)  [1/2] 2.27ns  loc: conv.cpp:13
:1  %a_load = load i32* %a_addr, align 4

ST_4: b_load (35)  [1/2] 2.27ns  loc: conv.cpp:13
:2  %b_load = load i32* %b_addr, align 4


 <State 5>: 8.11ns
ST_5: tmp (36)  [1/1] 8.11ns  loc: conv.cpp:13
:3  %tmp = mul nsw i32 %b_load, %a_load


 <State 6>: 2.79ns
ST_6: sum_load_1 (33)  [1/1] 0.00ns  loc: conv.cpp:13
:0  %sum_load_1 = load i32* %sum

ST_6: sum_1 (37)  [1/1] 1.94ns  loc: conv.cpp:13
:4  %sum_1 = add nsw i32 %tmp, %sum_load_1

ST_6: StgValue_43 (38)  [1/1] 0.85ns  loc: conv.cpp:13
:5  store i32 %sum_1, i32* %sum

ST_6: StgValue_44 (39)  [1/1] 0.00ns  loc: conv.cpp:10
:6  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.85ns
The critical path consists of the following:
	'alloca' operation ('sum') [4]  (0 ns)
	'store' operation of constant 0 on local variable 'sum' [9]  (0.85 ns)

 <State 2>: 1.7ns
The critical path consists of the following:
	'phi' operation ('phi_mul') with incoming values : ('next_mul') [13]  (0 ns)
	'add' operation ('next_mul') [14]  (1.7 ns)

 <State 3>: 3.96ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', conv.cpp:10) [22]  (0 ns)
	'add' operation ('tmp_2', conv.cpp:13) [24]  (1.7 ns)
	'getelementptr' operation ('a_addr', conv.cpp:13) [26]  (0 ns)
	'load' operation ('a_load', conv.cpp:13) on array 'a' [34]  (2.27 ns)

 <State 4>: 2.27ns
The critical path consists of the following:
	'load' operation ('a_load', conv.cpp:13) on array 'a' [34]  (2.27 ns)

 <State 5>: 8.11ns
The critical path consists of the following:
	'mul' operation ('tmp', conv.cpp:13) [36]  (8.11 ns)

 <State 6>: 2.79ns
The critical path consists of the following:
	'load' operation ('sum_load_1', conv.cpp:13) on local variable 'sum' [33]  (0 ns)
	'add' operation ('sum', conv.cpp:13) [37]  (1.94 ns)
	'store' operation (conv.cpp:13) of variable 'sum', conv.cpp:13 on local variable 'sum' [38]  (0.85 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
